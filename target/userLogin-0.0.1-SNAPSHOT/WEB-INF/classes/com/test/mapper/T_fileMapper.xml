<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.mapper.T_fileMapper" >
  <resultMap id="BaseResultMap" type="com.test.model.T_file" >
    <id column="fno" property="fno" jdbcType="INTEGER" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
    <result column="filetype" property="filetype" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="task_no" property="taskNo" jdbcType="INTEGER" />
    <result column="owe_perNo" property="owePerno" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fno, filename, filetype, time, task_no, owe_perNo
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.test.model.T_fileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_file
    where fno = #{fno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_file
    where fno = #{fno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.test.model.T_fileExample" >
    delete from t_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.test.model.T_file" >
    insert into t_file (fno, filename, filetype, 
      time, task_no, owe_perNo
      )
    values (#{fno,jdbcType=INTEGER}, #{filename,jdbcType=VARCHAR}, #{filetype,jdbcType=VARCHAR}, 
      #{time,jdbcType=VARCHAR}, #{taskNo,jdbcType=INTEGER}, #{owePerno,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.test.model.T_file" >
    insert into t_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fno != null" >
        fno,
      </if>
      <if test="filename != null" >
        filename,
      </if>
      <if test="filetype != null" >
        filetype,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="taskNo != null" >
        task_no,
      </if>
      <if test="owePerno != null" >
        owe_perNo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fno != null" >
        #{fno,jdbcType=INTEGER},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filetype != null" >
        #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="taskNo != null" >
        #{taskNo,jdbcType=INTEGER},
      </if>
      <if test="owePerno != null" >
        #{owePerno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.test.model.T_fileExample" resultType="java.lang.Integer" >
    select count(*) from t_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_file
    <set >
      <if test="record.fno != null" >
        fno = #{record.fno,jdbcType=INTEGER},
      </if>
      <if test="record.filename != null" >
        filename = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.filetype != null" >
        filetype = #{record.filetype,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.taskNo != null" >
        task_no = #{record.taskNo,jdbcType=INTEGER},
      </if>
      <if test="record.owePerno != null" >
        owe_perNo = #{record.owePerno,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_file
    set fno = #{record.fno,jdbcType=INTEGER},
      filename = #{record.filename,jdbcType=VARCHAR},
      filetype = #{record.filetype,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      task_no = #{record.taskNo,jdbcType=INTEGER},
      owe_perNo = #{record.owePerno,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.model.T_file" >
    update t_file
    <set >
      <if test="filename != null" >
        filename = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filetype != null" >
        filetype = #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="taskNo != null" >
        task_no = #{taskNo,jdbcType=INTEGER},
      </if>
      <if test="owePerno != null" >
        owe_perNo = #{owePerno,jdbcType=VARCHAR},
      </if>
    </set>
    where fno = #{fno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.model.T_file" >
    update t_file
    set filename = #{filename,jdbcType=VARCHAR},
      filetype = #{filetype,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      task_no = #{taskNo,jdbcType=INTEGER},
      owe_perNo = #{owePerno,jdbcType=VARCHAR}
    where fno = #{fno,jdbcType=INTEGER}
  </update>
</mapper>